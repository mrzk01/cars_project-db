# -*- coding: utf-8 -*-
"""cars_project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n4EGiv3QhdeZXJ9cgpvsEdvtvUIRO5Ma
"""

!pip install Faker
!pip install tabulate

# Import Library yang akan digunakan
from faker import Faker
from tabulate import tabulate
import random
from datetime import datetime, timedelta
from dateutil.relativedelta import relativedelta
import csv

FAKER = Faker('id_ID')

"""# Membuat dummy data

### Dummy data customers
"""

def show_data(table):
  tab = tabulate(tabular_data=table, headers = table.keys(), tablefmt="psql", numalign = "center")
  print(tab)

def customers_table(n_cust, is_print):


  # Buat table
  table = {}
  table["id"] = [i+1 for i in range(n_cust)]
  table["name"] = [FAKER.name() for i in range(n_cust)]
  table["email"] = [FAKER.email() for i in range(n_cust)]
  table["kontak"] = [FAKER.numerify('+628##-####-####') for i in range(n_cust)]

  # Print table
  if is_print:
    show_data(table)

  return table

# membuat data table users
customers1_table = customers_table(100, True)

"""### Dummy data users"""

def users_table(n_users, is_print):


  # Buat table
  table = {}
  table["id"] = [i+1 for i in range(n_users)]
  table["name"] = [FAKER.name() for i in range(n_users)]
  table["kontak"] = [FAKER.numerify('+628##-####-####') for i in range(n_users)]

  # Print table
  if is_print:
    show_data(table)

  return table

users1_table = users_table(n_users= 35, is_print=True);

def csv_to_dict(filename):

  # Buka file csv
  with open(f'{filename}', mode='r') as file:
    csv_reader = csv.DictReader(file)

    # simpan dlm bentuk list of dict
    data = {}
    for row in csv_reader:
      for key, value in row.items():
        data.setdefault(key, []).append(value)

  return data

# buka file city
city_table = csv_to_dict('city.csv')

show_data(city_table)

def users_table(users1_table, city_table, is_print):

  n_users = 35

  # Buat table
  table = {}
  table["id"] = [users1_table['id'][i] for i in range(n_users)]
  table["city_id"] = [random.choice(city_table['kota_id']) for i in range(n_users)]
  table["name"] = [users1_table['name'][i] for i in range(n_users)]
  table["contact"] = [users1_table['kontak'][i] for i in range(n_users)]

  # Print table
  if is_print:
    show_data(table)

  return table

users1_table = users_table(users1_table= users1_table, city_table=city_table, is_print= True);

"""### Dummy data ads"""

def csv_to_dict(filename):

  # Buka file csv
  with open(f'{filename}', mode='r') as file:
    csv_reader = csv.DictReader(file)

    # simpan dlm bentuk list of dict
    data = {}
    for row in csv_reader:
      for key, value in row.items():
        data.setdefault(key, []).append(value)

  return data

# buka file titledesc
titledesc = csv_to_dict('car_ads_titledesc.csv')

def ads_table(n_ads, is_print):

  n_ads = 35

  # Buat table
  table = {}
  table["id"] = [i+1 for i in range(n_ads)]
  table["user_id"] = [users1_table['id'][i] for i in range(n_ads)]
  table["title"] = [random.choice(titledesc['Title']) for i in range(n_ads)]
  table["description"] = [random.choice(titledesc['Description']) for i in range(n_ads)]

  # Print table
  if is_print:
    show_data(table)

  return table

ads1_table = ads_table(n_ads= 35, is_print=True);

"""### Dummy data cars"""

def csv_to_dict(filename):

  # Buka file csv
  with open(f'{filename}', mode='r') as file:
    csv_reader = csv.DictReader(file)

    # simpan dlm bentuk list of dict
    data = {}
    for row in csv_reader:
      for key, value in row.items():
        data.setdefault(key, []).append(value)

  return data

# buka file car_product
car_product = csv_to_dict('car_product.csv')

def cars_table(n_cars, is_print):

  n_cars = 50

  # Buat table
  table = {}
  table["id"] = [car_product['product_id'][i] for i in range(n_cars)]
  table["ads_id"] = [random.randint(1, 35) for i in range(n_cars)]
  table["brand"] = [car_product['brand'] [i] for i in range(n_cars)]
  table["model"] = [car_product['model'][i] for i in range(n_cars)]
  table["body_type"] = [car_product['body_type'][i] for i in range(n_cars)]
  table["transmission"] = [random.choice(['Automatic', 'Manual']) for i in range(n_cars)]
  table["color"] = [random.choice(['Merah', 'Putih', 'Hitam', 'Abu', 'Biru']) for i in range(n_cars)]
  table["price"] = [car_product['price'][i] for i in range(n_cars)]
  table["distance"] = [f"{random.randint(5000, 200000)} km" for i in range(n_cars)]
  table["year"] = [car_product['year'][i] for i in range(n_cars)]
  table["date_post"] = [FAKER.date_time_this_decade() for i in range(n_cars)]

  #Print table
  if is_print:
      show_data(table)

  return table

cars1_table = cars_table(n_cars= 50, is_print=True);

"""### Dummy data bids"""

def date_bid_generator(cars_ids, cars1_table):
    # Definisikan cars_data hanya untuk ID yang ada di cars_ids
    cars_data = {
        cars1_table['id'][i]: cars1_table['date_post'][i]
        for i in range(len(cars1_table['id']))
    }

    # Ambil tanggal pembuatan hanya untuk ID yang ada di cars_ids
    date_post_list = [
        cars_data[cars_id] for cars_id in cars_ids if cars_id in cars_data
    ]

    # Menghasilkan tanggal baru yang melebihi tanggal post
    new_dates = [
        FAKER.date_time_between(start_date=date + timedelta(days=1), end_date=date + timedelta(days=30))
        for date in date_post_list
    ]

    return new_dates

def generate_bid_price(max_price):
    # Definisi range persentase untuk bid price
    lower_bound_percentage = 0.70  # 70%
    upper_bound_percentage = 0.95  # 95%

    # Hitung range persentase
    lower_bound = max_price * lower_bound_percentage
    upper_bound = max_price * upper_bound_percentage

    # Generate a bid price in the range
    bid_price = random.randint(int(lower_bound), int(upper_bound))

    # Pembulatan harga bid ke ribuan
    bid_price = (bid_price // 1000) * 1000
    return bid_price

def bids_table(n_bids, is_print):

  # Buat table
  table = {}

  car_ids =  [];
  ads_ids =  [];
  bid_prices = [];

  for i in range(n_bids):
    carIndex = random.randint(0, len(cars1_table['id'])-1)
    car_ids.append(cars1_table['id'][carIndex])
    ads_ids.append(cars1_table['ads_id'][carIndex])

  # Dapatkan harga penawaran lebih rendah dari harga mobil
  for car_id in car_ids:
    car_index = cars1_table['id'].index(car_id)
    car_price_str = cars1_table['price'][car_index]

    # Ubah car price dari string ke integer
    car_price = int(car_price_str.replace(' ', '').replace(',', ''))

    # Generate harga penawaran dalam rentang yang ditentukan
    bid_price = generate_bid_price(car_price)
    bid_prices.append(bid_price)

  date_bid = date_bid_generator(cars_ids= car_ids, cars1_table=cars1_table);

  table["id"] = [i+1 for i in range(n_bids)]
  table["customer_id"] = [random.randint(1,100) for i in range(n_bids)]
  table["car_id"] = car_ids
  table["date_bid"] = date_bid
  table["bid_price"] = bid_prices
  table["bid_status"] = [random.choice(['Sent', 'Pending']) for i in range(n_bids)]

  # Print table
  if is_print:
    show_data(table)

  return table

bids1_table = bids_table(n_bids= 1000, is_print=True);

"""# Simpan menjadi file csv"""

def save_to_csv(data, nama_file):

  # Membuat file csv
    with open(f'{nama_file}.csv', mode='w', newline='') as file:
        # Membuat writer csv
        writer = csv.writer(file)

        # write header csv
        writer.writerow(data.keys())

        # mengetahui panjang data
        len_Data = len(list(data.items())[0][1])

        # write data ke file csv
        for i in range(len_Data):
            row = []
            for key in data.keys():
                row.append(data[key][i])
            writer.writerow(row)

# menyimpan data customers dlm bentuk csv
save_to_csv(data = customers1_table,
            nama_file='customers')

# menyimpan data users dlm bentuk csv
save_to_csv(data = users1_table,
            nama_file='users')

# menyimpan data ads dlm bentuk csv
save_to_csv(data = ads1_table,
            nama_file='ads')

# menyimpan data cars dlm bentuk csv
save_to_csv(data = cars1_table,
            nama_file='cars')

# menyimpan data bids dlm bentuk csv
save_to_csv(data = bids1_table,
            nama_file='bids')